{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "serve-legal-DW-historic-audits-import"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "output2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clients')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nvarchar"
					},
					{
						"name": "internal_id",
						"type": "nvarchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "logo",
						"type": "nvarchar"
					},
					{
						"name": "footer",
						"type": "nvarchar"
					},
					{
						"name": "client_type",
						"type": "nvarchar"
					},
					{
						"name": "sage_reference",
						"type": "nvarchar"
					},
					{
						"name": "manager_id",
						"type": "nvarchar"
					},
					{
						"name": "contract_expiry",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "store_locator",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "nvarchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Clients"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "3months_data_set",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "3months_data_set.xlsx",
						"container": "audits"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Order",
						"type": "String"
					},
					{
						"name": "Client",
						"type": "String"
					},
					{
						"name": "Visit",
						"type": "String"
					},
					{
						"name": "Site",
						"type": "String"
					},
					{
						"name": "Premises Name",
						"type": "String"
					},
					{
						"name": "Address1",
						"type": "String"
					},
					{
						"name": "Address2",
						"type": "String"
					},
					{
						"name": "Address3",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Post Code",
						"type": "String"
					},
					{
						"name": "Item to order",
						"type": "String"
					},
					{
						"name": "Actual Visit Date",
						"type": "String"
					},
					{
						"name": "Actual Visit Time",
						"type": "String"
					},
					{
						"name": "AM / PM",
						"type": "String"
					},
					{
						"name": "Pass-Fail",
						"type": "String"
					},
					{
						"name": "Pass-Fail2",
						"type": "String"
					},
					{
						"name": "Abort Reason",
						"type": "String"
					},
					{
						"name": "Extra Site 1",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nvarchar"
					},
					{
						"name": "internal_id",
						"type": "nvarchar"
					},
					{
						"name": "schedule_type",
						"type": "nvarchar"
					},
					{
						"name": "item_to_order",
						"type": "nvarchar"
					},
					{
						"name": "order_info",
						"type": "nvarchar"
					},
					{
						"name": "visits_to_be_billed",
						"type": "int",
						"precision": 10
					},
					{
						"name": "start_date",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "end_date",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "auditor_pay_per_audit",
						"type": "nvarchar"
					},
					{
						"name": "client_charge_per_audit",
						"type": "nvarchar"
					},
					{
						"name": "auditor_instructions",
						"type": "nvarchar"
					},
					{
						"name": "email_subject",
						"type": "nvarchar"
					},
					{
						"name": "email_survey_result",
						"type": "nvarchar"
					},
					{
						"name": "exclude_from_client_reporting",
						"type": "bit"
					},
					{
						"name": "narv_visits_only",
						"type": "bit"
					},
					{
						"name": "status",
						"type": "nvarchar"
					},
					{
						"name": "currency",
						"type": "nvarchar"
					},
					{
						"name": "client_id",
						"type": "nvarchar"
					},
					{
						"name": "revision_id",
						"type": "nvarchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_dw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "imported_rows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_dw_importing')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_dw_importing_noparam')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Process Excel Upload",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "6.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "truncate table @{pipeline().parameters.TransferTableName}",
									"type": "Expression"
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Order",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Order",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Client",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Client",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Visit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Visit",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Site",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Site",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Premises Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Premises Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Address1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Address2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Address3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "City",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Post Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Post Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Item to order",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Item to order",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Actual Visit Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Actual Visit Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Actual Visit Time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Actual Visit Time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AM / PM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AM / PM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Pass-Fail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pass-Fail",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Pass-Fail2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pass-Fail2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Abort Reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Abort Reason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Extra Site 1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Extra Site 1",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "dd/MM/yyyy"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azure_dw_importing",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@pipeline().parameters.TransferTableName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Collect New Clients",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Process Excel Upload",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "6.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select Client, newid() UniqueId from @{pipeline().parameters.TransferTableName} GROUP BY Client",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "drop table if exists dbo.clients_importing",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Client",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Client",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UniqueId",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "UniqueId",
											"type": "Guid"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "azure_dw_importing_noparam",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azure_dw_importing",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "clients_importing"
								}
							}
						]
					},
					{
						"name": "Put Clients into Warehouse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Collect New Clients",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "Source",
										"value": "Import"
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from Clients where entity_source = 'Import'",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Client",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "internal_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UniqueId",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Source"
										},
										"sink": {
											"name": "entity_source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "azure_dw_importing",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "clients_importing"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Clients",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Collect New Orders",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Put Clients into Warehouse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select [Order], max([Item To Order]) item_to_order, \n(select top 1 id from clients where clients.internal_id = historic_3m_importing.Client) clientId,\nnewid() UniqueId \nfrom @{pipeline().parameters.TransferTableName}\nGROUP BY [Order], [Client]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "drop table if exists orders_importing",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Order",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Order",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UniqueId",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "UniqueId",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									},
									{
										"source": {
											"name": "item_to_order",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "item_to_order",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "clientId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ClientId"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "azure_dw_importing_noparam",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azure_dw_importing",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "orders_importing"
								}
							}
						]
					},
					{
						"name": "Put Orders into Warehouse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Collect New Orders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "Source",
										"value": "Import"
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from Orders where entity_source = 'Import'",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Order",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "internal_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UniqueId",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Source"
										},
										"sink": {
											"name": "entity_source",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "item_to_order",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "item_to_order",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ClientId"
										},
										"sink": {
											"name": "client_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "azure_dw_importing",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "orders_importing"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Orders",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Collect New Sites",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Put Clients into Warehouse",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "6.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select [Site], (select top 1 id from clients where clients.internal_id = @{pipeline().parameters.TransferTableName}.Client) clientId, newid() UniqueId  from @{pipeline().parameters.TransferTableName} GROUP BY [Site], [Client]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "drop table if exists dbo.sites_importing",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Site",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Site",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UniqueId",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "UniqueId",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "clientId",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ClientId"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "azure_dw_importing_noparam",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "azure_dw_importing",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "sites_importing"
								}
							}
						]
					},
					{
						"name": "If DoSomething",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Process Excel Upload",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.Feature",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select Site, newid() UniqueId from @{pipeline().parameters.TransferTableName} GROUP BY Site",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": "drop table if exists sites_importing",
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Site",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "Site",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "UniqueId",
														"type": "Guid",
														"physicalType": "uniqueidentifier"
													},
													"sink": {
														"name": "UniqueId",
														"type": "Guid"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azure_dw_importing_noparam",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "azure_dw_importing",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "sites_importing"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"TransferTableName": {
						"type": "string",
						"defaultValue": "historic_3m_importing"
					},
					"Feature": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-09-07T15:15:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excel1')]",
				"[concat(variables('factoryId'), '/datasets/azure_dw_importing')]",
				"[concat(variables('factoryId'), '/datasets/azure_dw_importing_noparam')]",
				"[concat(variables('factoryId'), '/datasets/Clients')]",
				"[concat(variables('factoryId'), '/datasets/Orders')]"
			]
		}
	]
}