{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "serve-legal-DW-historic-audits-import"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AVS to Staging')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DW Answers get date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_sync_get_update_date]",
								"storedProcedureParameters": {
									"tableName": {
										"type": "String",
										"value": "Answers"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DW",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Copy Answers",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DW Answers get date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource",
								"query": {
									"value": "select\n *,\n 'AVS' as entity_source\nfrom audits.audit_answers\nwhere created_at > '@{activity('DW Answers get date').output.firstRow.max}'\nor modified_at > '@{activity('DW Answers get date').output.firstRow.max}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "internal_id",
											"type": "String"
										},
										"sink": {
											"name": "internal_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String"
										},
										"sink": {
											"name": "type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "value",
											"type": "String"
										},
										"sink": {
											"name": "value",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "hidden",
											"type": "Boolean"
										},
										"sink": {
											"name": "hidden",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "audit_id",
											"type": "Guid"
										},
										"sink": {
											"name": "audit_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "question_template_id",
											"type": "Guid"
										},
										"sink": {
											"name": "question_template_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "String"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "modified_at",
											"type": "String"
										},
										"sink": {
											"name": "modified_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "entity_source",
											"type": "String"
										},
										"sink": {
											"name": "entity_source",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AVS",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "staging_Answers",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "DW Answer set date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Answers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_sync_set_update_date]",
							"storedProcedureParameters": {
								"tableName": {
									"value": "Answers",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLDataWarehousePRODAuth",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DW Auditors get date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_sync_get_update_date]",
								"storedProcedureParameters": {
									"tableName": {
										"type": "String",
										"value": "Auditors"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DW",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Copy Auditors",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DW Auditors get date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource",
								"query": {
									"value": "select\n *,\n 'AVS' as entity_source\nfrom users.auditor",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Guid"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "internal_id",
											"type": "String"
										},
										"sink": {
											"name": "internal_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "email_settings",
											"type": "Boolean"
										},
										"sink": {
											"name": "email_settings",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "passport",
											"type": "String"
										},
										"sink": {
											"name": "passport",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "identification",
											"type": "String"
										},
										"sink": {
											"name": "identification",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "country",
											"type": "String"
										},
										"sink": {
											"name": "country",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "honorific",
											"type": "String"
										},
										"sink": {
											"name": "honorific",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "gender",
											"type": "String"
										},
										"sink": {
											"name": "gender",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "date_of_birth",
											"type": "String"
										},
										"sink": {
											"name": "date_of_birth",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "marital_status",
											"type": "String"
										},
										"sink": {
											"name": "marital_status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "occupation",
											"type": "String"
										},
										"sink": {
											"name": "occupation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ni_pps",
											"type": "String"
										},
										"sink": {
											"name": "ni_pps",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "home_address_1",
											"type": "String"
										},
										"sink": {
											"name": "home_address_1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "home_address_2",
											"type": "String"
										},
										"sink": {
											"name": "home_address_2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "home_city",
											"type": "String"
										},
										"sink": {
											"name": "home_city",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "home_post_code",
											"type": "String"
										},
										"sink": {
											"name": "home_post_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "home_county",
											"type": "String"
										},
										"sink": {
											"name": "home_county",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "term_address_1",
											"type": "String"
										},
										"sink": {
											"name": "term_address_1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "term_address_2",
											"type": "String"
										},
										"sink": {
											"name": "term_address_2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "term_city",
											"type": "String"
										},
										"sink": {
											"name": "term_city",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "term_post_code",
											"type": "String"
										},
										"sink": {
											"name": "term_post_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "term_county",
											"type": "String"
										},
										"sink": {
											"name": "term_county",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "mobile_number",
											"type": "String"
										},
										"sink": {
											"name": "mobile_number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "home_number",
											"type": "String"
										},
										"sink": {
											"name": "home_number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "notes",
											"type": "String"
										},
										"sink": {
											"name": "notes",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "hear_about_us",
											"type": "String"
										},
										"sink": {
											"name": "hear_about_us",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "hear_about_us_details",
											"type": "String"
										},
										"sink": {
											"name": "hear_about_us_details",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "recommended_by",
											"type": "String"
										},
										"sink": {
											"name": "recommended_by",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "email_communication",
											"type": "Boolean"
										},
										"sink": {
											"name": "email_communication",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "servelegal_community",
											"type": "Boolean"
										},
										"sink": {
											"name": "servelegal_community",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "card_name",
											"type": "String"
										},
										"sink": {
											"name": "card_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "bank_country",
											"type": "String"
										},
										"sink": {
											"name": "bank_country",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "account_number",
											"type": "String"
										},
										"sink": {
											"name": "account_number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sort_code",
											"type": "String"
										},
										"sink": {
											"name": "sort_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "swift_code",
											"type": "String"
										},
										"sink": {
											"name": "swift_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "iban_number",
											"type": "String"
										},
										"sink": {
											"name": "iban_number",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "circumstances",
											"type": "String"
										},
										"sink": {
											"name": "circumstances",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "student_loans",
											"type": "String"
										},
										"sink": {
											"name": "student_loans",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "access_to_car",
											"type": "String"
										},
										"sink": {
											"name": "access_to_car",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "why_servelegal",
											"type": "String"
										},
										"sink": {
											"name": "why_servelegal",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "about_yourself",
											"type": "String"
										},
										"sink": {
											"name": "about_yourself",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "travel_outside",
											"type": "String"
										},
										"sink": {
											"name": "travel_outside",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "auditor_status",
											"type": "String"
										},
										"sink": {
											"name": "auditor_status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "user_id",
											"type": "Guid"
										},
										"sink": {
											"name": "user_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "entity_source",
											"type": "String"
										},
										"sink": {
											"name": "entity_source",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AVS",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "staging_Auditors",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "DW Audits get date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_sync_get_update_date]",
								"storedProcedureParameters": {
									"tableName": {
										"type": "String",
										"value": "Audits"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DW",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Copy Audits",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DW Audits get date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource",
								"query": {
									"value": "select\n *,\n jsonb_extract_path_text(survey_result::jsonb, '0', 'result') as survey_result_value,\n 'AVS' as entity_source\nfrom audits.audit\nwhere created_at > '@{activity('DW Audits get date').output.firstRow.max}'\nor modified_at > '@{activity('DW Audits get date').output.firstRow.max}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Guid"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "internal_id",
											"type": "String"
										},
										"sink": {
											"name": "internal_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "query_notes",
											"type": "String"
										},
										"sink": {
											"name": "query_notes",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "query_category",
											"type": "String"
										},
										"sink": {
											"name": "query_category",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "survey_result_value",
											"type": "String"
										},
										"sink": {
											"name": "survey_result",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visit_info",
											"type": "String"
										},
										"sink": {
											"name": "visit_info",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "submitted_date",
											"type": "String"
										},
										"sink": {
											"name": "submitted_date",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "approval_date",
											"type": "String"
										},
										"sink": {
											"name": "approval_date",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "deadline_date",
											"type": "String"
										},
										"sink": {
											"name": "deadline_date",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "date_of_visit",
											"type": "String"
										},
										"sink": {
											"name": "date_of_visit",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "purchase_cost",
											"type": "Single"
										},
										"sink": {
											"name": "purchase_cost",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "allowance",
											"type": "Single"
										},
										"sink": {
											"name": "allowance",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "mileage",
											"type": "Single"
										},
										"sink": {
											"name": "mileage",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "entrance_charge",
											"type": "Single"
										},
										"sink": {
											"name": "entrance_charge",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "travel_expenses",
											"type": "Single"
										},
										"sink": {
											"name": "travel_expenses",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "travel_expenses_type",
											"type": "String"
										},
										"sink": {
											"name": "travel_expenses_type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "travel_expenses_description",
											"type": "String"
										},
										"sink": {
											"name": "travel_expenses_description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "reclaimable_expenses",
											"type": "Single"
										},
										"sink": {
											"name": "reclaimable_expenses",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "reclaimable_expenses_type",
											"type": "String"
										},
										"sink": {
											"name": "reclaimable_expenses_type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "reclaimable_expenses_description",
											"type": "String"
										},
										"sink": {
											"name": "reclaimable_expenses_description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "paid",
											"type": "Boolean"
										},
										"sink": {
											"name": "paid",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "batched",
											"type": "Boolean"
										},
										"sink": {
											"name": "batched",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "payroll_date",
											"type": "String"
										},
										"sink": {
											"name": "payroll_date",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "pay_date",
											"type": "String"
										},
										"sink": {
											"name": "pay_date",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "email_note",
											"type": "String"
										},
										"sink": {
											"name": "email_note",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String"
										},
										"sink": {
											"name": "status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "order_id",
											"type": "Guid"
										},
										"sink": {
											"name": "order_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "site_id",
											"type": "Guid"
										},
										"sink": {
											"name": "site_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "approved_by_id",
											"type": "Guid"
										},
										"sink": {
											"name": "approved_by_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "auditor_id",
											"type": "Guid"
										},
										"sink": {
											"name": "auditor_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "item_to_order",
											"type": "String"
										},
										"sink": {
											"name": "item_to_order",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "auditor_instructions",
											"type": "String"
										},
										"sink": {
											"name": "auditor_instructions",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "auditor_pay_per_audit",
											"type": "Single"
										},
										"sink": {
											"name": "auditor_pay_per_audit",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "approving_notes",
											"type": "String"
										},
										"sink": {
											"name": "approving_notes",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "String"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "modified_at",
											"type": "String"
										},
										"sink": {
											"name": "modified_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "entity_source",
											"type": "String"
										},
										"sink": {
											"name": "entity_source",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AVS",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "staging_Audits",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "DW Audits set date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Audits",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_sync_set_update_date]",
							"storedProcedureParameters": {
								"tableName": {
									"value": "Audits",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLDataWarehousePRODAuth",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DW Clients get date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_sync_get_update_date]",
								"storedProcedureParameters": {
									"tableName": {
										"type": "String",
										"value": "Clients"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DW",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Copy Clients",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DW Clients get date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource",
								"query": {
									"value": "select\n *,\n 'AVS' as entity_source\nfrom clients.client\nwhere created_at > '@{activity('DW Clients get date').output.firstRow.max}'\nor modified_at > '@{activity('DW Clients get date').output.firstRow.max}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Guid"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "internal_id",
											"type": "String"
										},
										"sink": {
											"name": "internal_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "legacy_id",
											"type": "String"
										},
										"sink": {
											"name": "legacy_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "logo",
											"type": "String"
										},
										"sink": {
											"name": "logo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "footer",
											"type": "String"
										},
										"sink": {
											"name": "footer",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "client_type",
											"type": "String"
										},
										"sink": {
											"name": "client_type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "sage_reference",
											"type": "String"
										},
										"sink": {
											"name": "sage_reference",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "manager_id",
											"type": "Guid"
										},
										"sink": {
											"name": "manager_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "contract_expiry",
											"type": "String"
										},
										"sink": {
											"name": "contract_expiry",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "store_locator",
											"type": "String"
										},
										"sink": {
											"name": "store_locator",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String"
										},
										"sink": {
											"name": "status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "String"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "modified_at",
											"type": "String"
										},
										"sink": {
											"name": "modified_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "entity_source",
											"type": "String"
										},
										"sink": {
											"name": "entity_source",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AVS",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "staging_Clients",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "DW Clients set date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Clients",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_sync_set_update_date]",
							"storedProcedureParameters": {
								"tableName": {
									"value": "Clients",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLDataWarehousePRODAuth",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DW Orders get date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_sync_get_update_date]",
								"storedProcedureParameters": {
									"tableName": {
										"type": "String",
										"value": "Orders"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DW",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Copy Orders",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DW Orders get date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource",
								"query": {
									"value": "select\n *,\n 'AVS' as entity_source\nfrom orders.order\nwhere created_at > '@{activity('DW Orders get date').output.firstRow.max}'\nor modified_at > '@{activity('DW Orders get date').output.firstRow.max}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Guid"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "internal_id",
											"type": "String"
										},
										"sink": {
											"name": "internal_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "schedule_type",
											"type": "String"
										},
										"sink": {
											"name": "schedule_type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "item_to_order",
											"type": "String"
										},
										"sink": {
											"name": "item_to_order",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "order_info",
											"type": "String"
										},
										"sink": {
											"name": "order_info",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "visits_to_be_billed",
											"type": "Int32"
										},
										"sink": {
											"name": "visits_to_be_billed",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "start_date",
											"type": "String"
										},
										"sink": {
											"name": "start_date",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "end_date",
											"type": "String"
										},
										"sink": {
											"name": "end_date",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "auditor_pay_per_audit",
											"type": "Single"
										},
										"sink": {
											"name": "auditor_pay_per_audit",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "client_charge_per_audit",
											"type": "Single"
										},
										"sink": {
											"name": "client_charge_per_audit",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "auditor_instructions",
											"type": "String"
										},
										"sink": {
											"name": "auditor_instructions",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "email_subject",
											"type": "String"
										},
										"sink": {
											"name": "email_subject",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "email_survey_result",
											"type": "String"
										},
										"sink": {
											"name": "email_survey_result",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "exclude_from_client_reporting",
											"type": "Boolean"
										},
										"sink": {
											"name": "exclude_from_client_reporting",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "narv_visits_only",
											"type": "Boolean"
										},
										"sink": {
											"name": "narv_visits_only",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String"
										},
										"sink": {
											"name": "status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "currency",
											"type": "String"
										},
										"sink": {
											"name": "currency",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "client_id",
											"type": "Guid"
										},
										"sink": {
											"name": "client_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "revision_id",
											"type": "Guid"
										},
										"sink": {
											"name": "revision_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "String"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "modified_at",
											"type": "String"
										},
										"sink": {
											"name": "modified_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "entity_source",
											"type": "String"
										},
										"sink": {
											"name": "entity_source",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AVS",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "staging_Orders",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "DW Orders set date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Orders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_sync_set_update_date]",
							"storedProcedureParameters": {
								"tableName": {
									"value": "Orders",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLDataWarehousePRODAuth",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DW Questions get date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_sync_get_update_date]",
								"storedProcedureParameters": {
									"tableName": {
										"type": "String",
										"value": "Questions"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DW",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Copy Questions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DW Questions get date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource",
								"query": {
									"value": "select\n *,\n 'AVS' as entity_source\nfrom surveys.revision_questions\nwhere created_at > '@{activity('DW Questions get date').output.firstRow.max}'\nor modified_at > '@{activity('DW Questions get date').output.firstRow.max}'\nlimit 0",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "internal_id",
											"type": "String"
										},
										"sink": {
											"name": "internal_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "help",
											"type": "String"
										},
										"sink": {
											"name": "help",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String"
										},
										"sink": {
											"name": "type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "title",
											"type": "String"
										},
										"sink": {
											"name": "title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "required",
											"type": "Boolean"
										},
										"sink": {
											"name": "required",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "category",
											"type": "String"
										},
										"sink": {
											"name": "category",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "config",
											"type": "String"
										},
										"sink": {
											"name": "config",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "question_template_id",
											"type": "Guid"
										},
										"sink": {
											"name": "question_template_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "revision_id",
											"type": "Guid"
										},
										"sink": {
											"name": "revision_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "String"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "modified_at",
											"type": "String"
										},
										"sink": {
											"name": "modified_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "entity_source",
											"type": "String"
										},
										"sink": {
											"name": "entity_source",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AVS",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "staging_Questions",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "DW Questions set date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Questions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_sync_set_update_date]",
							"storedProcedureParameters": {
								"tableName": {
									"value": "Questions",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLDataWarehousePRODAuth",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DW QuestionTemplates get date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_sync_get_update_date]",
								"storedProcedureParameters": {
									"tableName": {
										"type": "String",
										"value": "QuestionTemplates"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DW",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Copy QuestionTemplates",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DW QuestionTemplates get date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource",
								"query": {
									"value": "select\n *,\n 'AVS' as entity_source\nfrom questions.question\nwhere created_at > '@{activity('DW QuestionTemplates get date').output.firstRow.max}'\nor modified_at > '@{activity('DW QuestionTemplates get date').output.firstRow.max}'\nlimit 0",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Guid"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "internal_id",
											"type": "String"
										},
										"sink": {
											"name": "internal_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "help",
											"type": "String"
										},
										"sink": {
											"name": "help",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "title",
											"type": "String"
										},
										"sink": {
											"name": "title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "required",
											"type": "Boolean"
										},
										"sink": {
											"name": "required",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String"
										},
										"sink": {
											"name": "type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "config",
											"type": "String"
										},
										"sink": {
											"name": "config",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "category",
											"type": "String"
										},
										"sink": {
											"name": "category",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "String"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "modified_at",
											"type": "String"
										},
										"sink": {
											"name": "modified_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "entity_source",
											"type": "String"
										},
										"sink": {
											"name": "entity_source",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AVS",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "staging_QuestionTemplates",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "DW QuestionTemplates set date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy QuestionTemplates",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_sync_set_update_date]",
							"storedProcedureParameters": {
								"tableName": {
									"value": "QuestionTemplates",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLDataWarehousePRODAuth",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DW Revisions get date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_sync_get_update_date]",
								"storedProcedureParameters": {
									"tableName": {
										"type": "String",
										"value": "Revisions"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DW",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Copy Revisions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DW Revisions get date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource",
								"query": {
									"value": "select\n *,\n 'AVS' as entity_source\nfrom surveys.revision\nwhere created_at > '@{activity('DW Revisions get date').output.firstRow.max}'\nor modified_at > '@{activity('DW Revisions get date').output.firstRow.max}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Guid"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "internal_id",
											"type": "String"
										},
										"sink": {
											"name": "internal_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String"
										},
										"sink": {
											"name": "status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "survey_id",
											"type": "Guid"
										},
										"sink": {
											"name": "survey_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "blocked",
											"type": "Boolean"
										},
										"sink": {
											"name": "blocked",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "String"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "modified_at",
											"type": "String"
										},
										"sink": {
											"name": "modified_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "entity_source",
											"type": "String"
										},
										"sink": {
											"name": "entity_source",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AVS",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "staging_Revisions",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "DW Revisions set date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Revisions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_sync_set_update_date]",
							"storedProcedureParameters": {
								"tableName": {
									"value": "Revisions",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLDataWarehousePRODAuth",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DW Sites get date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_sync_get_update_date]",
								"storedProcedureParameters": {
									"tableName": {
										"type": "String",
										"value": "Sites"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DW",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Copy Sites",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DW Sites get date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource",
								"query": {
									"value": "select\n *,\n coalesce(\n\t jsonb_extract_path_text(organisation_level_code::jsonb, '0', 'org_level_1'),\n\t jsonb_extract_path_text(organisation_level_code::jsonb, '1', 'org_level_1'),\n\t jsonb_extract_path_text(organisation_level_code::jsonb, '2', 'org_level_1'),\n\t jsonb_extract_path_text(organisation_level_code::jsonb, '3', 'org_level_1')\n ) as org_level1,\n  coalesce(\n\t jsonb_extract_path_text(organisation_level_code::jsonb, '0', 'org_level_2'),\n\t jsonb_extract_path_text(organisation_level_code::jsonb, '1', 'org_level_2'),\n\t jsonb_extract_path_text(organisation_level_code::jsonb, '2', 'org_level_2'),\n\t jsonb_extract_path_text(organisation_level_code::jsonb, '3', 'org_level_2')\n ) as org_level2,\n  coalesce(\n\t jsonb_extract_path_text(organisation_level_code::jsonb, '0', 'org_level_3'),\n\t jsonb_extract_path_text(organisation_level_code::jsonb, '1', 'org_level_3'),\n\t jsonb_extract_path_text(organisation_level_code::jsonb, '2', 'org_level_3'),\n\t jsonb_extract_path_text(organisation_level_code::jsonb, '3', 'org_level_3')\n ) as org_level3,\n  coalesce(\n\t jsonb_extract_path_text(organisation_level_code::jsonb, '0', 'org_level_4'),\n\t jsonb_extract_path_text(organisation_level_code::jsonb, '1', 'org_level_4'),\n\t jsonb_extract_path_text(organisation_level_code::jsonb, '2', 'org_level_4'),\n\t jsonb_extract_path_text(organisation_level_code::jsonb, '3', 'org_level_4')\n ) as org_level4,\n 'AVS' as entity_source\nfrom sites.site\nwhere created_at > '@{activity('DW Sites get date').output.firstRow.max}'\nor modified_at > '@{activity('DW Sites get date').output.firstRow.max}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Guid"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "internal_id",
											"type": "String"
										},
										"sink": {
											"name": "internal_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "legacy_id",
											"type": "String"
										},
										"sink": {
											"name": "legacy_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "address_1",
											"type": "String"
										},
										"sink": {
											"name": "address_1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "address_2",
											"type": "String"
										},
										"sink": {
											"name": "address_2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "address_3",
											"type": "String"
										},
										"sink": {
											"name": "address_3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String"
										},
										"sink": {
											"name": "city",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "post_code",
											"type": "String"
										},
										"sink": {
											"name": "post_code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "county",
											"type": "String"
										},
										"sink": {
											"name": "county",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "country",
											"type": "String"
										},
										"sink": {
											"name": "country",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "directions",
											"type": "String"
										},
										"sink": {
											"name": "directions",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "approving_notes",
											"type": "String"
										},
										"sink": {
											"name": "approving_notes",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "code",
											"type": "String"
										},
										"sink": {
											"name": "code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String"
										},
										"sink": {
											"name": "status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "client_id",
											"type": "Guid"
										},
										"sink": {
											"name": "client_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "String"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "modified_at",
											"type": "String"
										},
										"sink": {
											"name": "modified_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "org_level1",
											"type": "String"
										},
										"sink": {
											"name": "org_level1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_level2",
											"type": "String"
										},
										"sink": {
											"name": "org_level2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_level3",
											"type": "String"
										},
										"sink": {
											"name": "org_level3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "org_level4",
											"type": "String"
										},
										"sink": {
											"name": "org_level4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "entity_source",
											"type": "String"
										},
										"sink": {
											"name": "entity_source",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AVS",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "staging_Sites",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "DW Sites set date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Sites",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_sync_set_update_date]",
							"storedProcedureParameters": {
								"tableName": {
									"value": "Sites",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLDataWarehousePRODAuth",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DW Surveys get date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_sync_get_update_date]",
								"storedProcedureParameters": {
									"tableName": {
										"type": "String",
										"value": "Surveys"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DW",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Copy Surveys",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DW Surveys get date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource",
								"query": {
									"value": "select\n *,\n 'AVS' as entity_source\nfrom surveys.survey\nwhere created_at > '@{activity('DW Surveys get date').output.firstRow.max}'\nor modified_at > '@{activity('DW Surveys get date').output.firstRow.max}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Guid"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "internal_id",
											"type": "String"
										},
										"sink": {
											"name": "internal_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "title",
											"type": "String"
										},
										"sink": {
											"name": "title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "String"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "modified_at",
											"type": "String"
										},
										"sink": {
											"name": "modified_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "entity_source",
											"type": "String"
										},
										"sink": {
											"name": "entity_source",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AVS",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "staging_Surveys",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "DW Surveys set date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Surveys",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_sync_set_update_date]",
							"storedProcedureParameters": {
								"tableName": {
									"value": "Surveys",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLDataWarehousePRODAuth",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DW Users get date",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Truncate Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_sync_get_update_date]",
								"storedProcedureParameters": {
									"tableName": {
										"type": "String",
										"value": "Users"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DW",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Copy Users",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DW Users get date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource",
								"query": {
									"value": "select\n *,\n 'AVS' as entity_source\nfrom users.user\nwhere created_at > '@{activity('DW Users get date').output.firstRow.max}'\nor modified_at > '@{activity('DW Users get date').output.firstRow.max}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Guid"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "internal_id",
											"type": "String"
										},
										"sink": {
											"name": "internal_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "first_name",
											"type": "String"
										},
										"sink": {
											"name": "first_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "middle_name",
											"type": "String"
										},
										"sink": {
											"name": "middle_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "last_name",
											"type": "String"
										},
										"sink": {
											"name": "last_name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String"
										},
										"sink": {
											"name": "email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "image",
											"type": "String"
										},
										"sink": {
											"name": "image",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String"
										},
										"sink": {
											"name": "status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "notify_user",
											"type": "Boolean"
										},
										"sink": {
											"name": "notify_user",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "role",
											"type": "String"
										},
										"sink": {
											"name": "role",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "last_access",
											"type": "String"
										},
										"sink": {
											"name": "last_access",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "client_id",
											"type": "Guid"
										},
										"sink": {
											"name": "client_id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "String"
										},
										"sink": {
											"name": "created_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "modified_at",
											"type": "String"
										},
										"sink": {
											"name": "modified_at",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									},
									{
										"source": {
											"name": "entity_source",
											"type": "String"
										},
										"sink": {
											"name": "entity_source",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AVS",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "staging_Users",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "DW Users set date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_sync_set_update_date]",
							"storedProcedureParameters": {
								"tableName": {
									"value": "Users",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLDataWarehousePRODAuth",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Truncate Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_truncate_staging_tables]"
						},
						"linkedServiceName": {
							"referenceName": "SQLDataWarehousePRODAuth",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Decision to continue",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DW Answer set date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy Auditors",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DW Audits set date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DW Clients set date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DW Orders set date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DW Questions set date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DW QuestionTemplates set date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DW Revisions set date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DW Sites set date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DW Surveys set date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DW Users set date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "StagingToDWDecision",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-09-24T14:31:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DW')]",
				"[concat(variables('factoryId'), '/datasets/AVS')]",
				"[concat(variables('factoryId'), '/datasets/staging_Answers')]",
				"[concat(variables('factoryId'), '/datasets/staging_Auditors')]",
				"[concat(variables('factoryId'), '/datasets/staging_Audits')]",
				"[concat(variables('factoryId'), '/datasets/staging_Clients')]",
				"[concat(variables('factoryId'), '/datasets/staging_Orders')]",
				"[concat(variables('factoryId'), '/datasets/staging_Questions')]",
				"[concat(variables('factoryId'), '/datasets/staging_QuestionTemplates')]",
				"[concat(variables('factoryId'), '/datasets/staging_Revisions')]",
				"[concat(variables('factoryId'), '/datasets/staging_Sites')]",
				"[concat(variables('factoryId'), '/datasets/staging_Surveys')]",
				"[concat(variables('factoryId'), '/datasets/staging_Users')]",
				"[concat(variables('factoryId'), '/pipelines/StagingToDWDecision')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CalculateAverages')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CalculateAverages",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CalculateAverages",
								"type": "DataFlowReference",
								"datasetParameters": {
									"TDailyByClientType": {
										"TableName": "Avg_Daily_ClientType"
									},
									"TClientTypes": {
										"TableName": "ClientTypes"
									},
									"TProducts": {
										"TableName": "Products"
									},
									"TDailyByProdyct": {
										"TableName": "Avg_Daily_Product"
									},
									"TAverageByProduct": {
										"TableName": "Avg_Product"
									},
									"TDailyByClientTypeProduct": {
										"TableName": "Avg_Daily_ClientType_Product"
									},
									"TMonthlyByClientTypeProduct": {
										"TableName": "Avg_Monthly_ClientType_Product"
									},
									"TWeeklyByClientTypeProduct": {
										"TableName": "Avg_Weekly_ClientType_Product"
									},
									"TWeeklyByClient": {
										"TableName": "Avg_Weekly_ClientType"
									}
								}
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CalculateAverages')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExportHistoricalToTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Order",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Order",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Client",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Client",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Visit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Visit",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Site",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Site",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Premises Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Premises Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Post Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Post Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Item to order",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Item to order",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Actual Visit Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Actual Visit Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Actual Visit Time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Actual Visit Time",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AM / PM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AM / PM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Pass-Fail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pass-Fail",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Pass-Fail2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pass-Fail2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Abort Reason",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Abort Reason",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Extra Site 1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Extra Site 1",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel1",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "VariableTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "HistoricalDataV3"
								}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VariableTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RefreshReports')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get PowerBI Auth",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get Admin PW",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get Admin User",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://login.microsoftonline.com/common/oauth2/token",
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "grant_type=password&client_id=4187986e-76b7-434c-9c73-3b23d505e1f0&resource=https://analysis.windows.net/powerbi/api&scope=openid&username=@{activity('Get Admin User').output.value}&password=@{activity('Get Admin PW').output.value}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup Reports",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get PowerBI Auth",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ClientReports",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Refresh Reports",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Reports",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Reports').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Refresh Report",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api.powerbi.com/v1.0/myorg/groups/@{item().WorkspaceId}/datasets/@{item().DataSourceId}/refreshes",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{activity('Get PowerBI Auth').output.access_token}",
												"type": "Expression"
											}
										},
										"body": "{ok: 1}"
									}
								}
							]
						}
					},
					{
						"name": "Get Admin PW",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://serve-legal-reports.vault.azure.net/secrets/serve-legal-powerbi-admin-pwd?api-version=7.0",
							"method": "GET",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Get Admin User",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://serve-legal-reports.vault.azure.net/secrets/serve-legal-powerbi-admin-user?api-version=7.0",
							"method": "GET",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ClientReports')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StagingToDWDecision')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Check Audits in staging",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select  \n  (select count(*) from dbo.staging_Answers) +\n  -- (select count(*) from dbo.staging_Auditors) +\n  (select count(*) from dbo.staging_Audits) +\n  (select count(*) from dbo.staging_Clients) +\n  (select count(*) from dbo.staging_Orders) +\n  (select count(*) from dbo.staging_Questions) +\n  (select count(*) from dbo.staging_QuestionTemplates) +\n  (select count(*) from dbo.staging_Revisions) +\n  (select count(*) from dbo.staging_Sites) +\n  (select count(*) from dbo.staging_Surveys) +\n  (select count(*) from dbo.staging_Users)\n  as count",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DW",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Has audit rows",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check Audits in staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Check Audits in staging').output.firstRow.count, 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Start Staging to DW Merge",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "StagingToDWEntities",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DW')]",
				"[concat(variables('factoryId'), '/pipelines/StagingToDWEntities')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StagingToDWEntities')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "StagingToDWOrders",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "StagingToDWOrders",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "StagingToDWAuditors",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "StagingToDWOrders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "StagingToDWAuditors",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "StagingToDWQuestionTemplates",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "StagingToDWAuditors",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "StagingToDWQuestionTemplates",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "StagingToDWRevisions",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "StagingToDWQuestionTemplates",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "StagingToDWRevisions",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "StagingToDWAudits",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "StagingToDWRevisions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "StagingToDWAudits",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "StagingToDWSurveys",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "StagingToDWAudits",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "StagingToDWSurveys",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "StagingToDWUsers",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "StagingToDWSurveys",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "StagingToDWUsers",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "StagingToDWQuestions",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "StagingToDWUsers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "StagingToDWQuestions",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "StagingToDWAnswers",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "StagingToDWQuestions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "StagingToDWAnswers",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "StagingToDWClients",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "StagingToDWAnswers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "StagingToDWClients",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "StagingToDWSites",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "StagingToDWClients",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "StagingToDWSites",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Refresh existing reports",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "StagingToDWSites",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RefreshReports",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/RefreshReports')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AVS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AWS AVS prod replica set",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Answers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "type",
						"type": "nvarchar"
					},
					{
						"name": "value",
						"type": "nvarchar"
					},
					{
						"name": "hidden",
						"type": "bit"
					},
					{
						"name": "audit_id",
						"type": "varchar"
					},
					{
						"name": "question_template_id",
						"type": "varchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Answers"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Auditors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "email_settings",
						"type": "bit"
					},
					{
						"name": "passport",
						"type": "nvarchar"
					},
					{
						"name": "identification",
						"type": "nvarchar"
					},
					{
						"name": "country",
						"type": "nvarchar"
					},
					{
						"name": "honorific",
						"type": "nvarchar"
					},
					{
						"name": "gender",
						"type": "nvarchar"
					},
					{
						"name": "date_of_birth",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "marital_status",
						"type": "nvarchar"
					},
					{
						"name": "occupation",
						"type": "nvarchar"
					},
					{
						"name": "ni_pps",
						"type": "nvarchar"
					},
					{
						"name": "home_address_1",
						"type": "nvarchar"
					},
					{
						"name": "home_address_2",
						"type": "nvarchar"
					},
					{
						"name": "home_city",
						"type": "nvarchar"
					},
					{
						"name": "home_post_code",
						"type": "nvarchar"
					},
					{
						"name": "home_county",
						"type": "nvarchar"
					},
					{
						"name": "term_address_1",
						"type": "nvarchar"
					},
					{
						"name": "term_address_2",
						"type": "nvarchar"
					},
					{
						"name": "term_city",
						"type": "nvarchar"
					},
					{
						"name": "term_post_code",
						"type": "nvarchar"
					},
					{
						"name": "term_county",
						"type": "nvarchar"
					},
					{
						"name": "mobile_number",
						"type": "nvarchar"
					},
					{
						"name": "home_number",
						"type": "nvarchar"
					},
					{
						"name": "notes",
						"type": "nvarchar"
					},
					{
						"name": "hear_about_us",
						"type": "nvarchar"
					},
					{
						"name": "hear_about_us_details",
						"type": "nvarchar"
					},
					{
						"name": "recommended_by",
						"type": "nvarchar"
					},
					{
						"name": "email_communication",
						"type": "bit"
					},
					{
						"name": "servelegal_community",
						"type": "bit"
					},
					{
						"name": "card_name",
						"type": "nvarchar"
					},
					{
						"name": "bank_country",
						"type": "nvarchar"
					},
					{
						"name": "account_number",
						"type": "nvarchar"
					},
					{
						"name": "sort_code",
						"type": "nvarchar"
					},
					{
						"name": "swift_code",
						"type": "nvarchar"
					},
					{
						"name": "iban_number",
						"type": "nvarchar"
					},
					{
						"name": "circumstances",
						"type": "nvarchar"
					},
					{
						"name": "student_loans",
						"type": "nvarchar"
					},
					{
						"name": "access_to_car",
						"type": "nvarchar"
					},
					{
						"name": "why_servelegal",
						"type": "nvarchar"
					},
					{
						"name": "about_yourself",
						"type": "nvarchar"
					},
					{
						"name": "travel_outside",
						"type": "nvarchar"
					},
					{
						"name": "auditor_status",
						"type": "nvarchar"
					},
					{
						"name": "user_id",
						"type": "varchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Auditors"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Audits')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "query_notes",
						"type": "nvarchar"
					},
					{
						"name": "query_category",
						"type": "nvarchar"
					},
					{
						"name": "survey_result",
						"type": "nvarchar"
					},
					{
						"name": "visit_info",
						"type": "nvarchar"
					},
					{
						"name": "submitted_date",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "approval_date",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "deadline_date",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "date_of_visit",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "purchase_cost",
						"type": "float",
						"precision": 15
					},
					{
						"name": "allowance",
						"type": "float",
						"precision": 15
					},
					{
						"name": "mileage",
						"type": "float",
						"precision": 15
					},
					{
						"name": "entrance_charge",
						"type": "float",
						"precision": 15
					},
					{
						"name": "travel_expenses",
						"type": "float",
						"precision": 15
					},
					{
						"name": "travel_expenses_type",
						"type": "nvarchar"
					},
					{
						"name": "travel_expenses_description",
						"type": "nvarchar"
					},
					{
						"name": "reclaimable_expenses",
						"type": "float",
						"precision": 15
					},
					{
						"name": "reclaimable_expenses_type",
						"type": "nvarchar"
					},
					{
						"name": "reclaimable_expenses_description",
						"type": "nvarchar"
					},
					{
						"name": "paid",
						"type": "bit"
					},
					{
						"name": "batched",
						"type": "bit"
					},
					{
						"name": "payroll_date",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "pay_date",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "email_note",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "nvarchar"
					},
					{
						"name": "order_id",
						"type": "varchar"
					},
					{
						"name": "site_id",
						"type": "varchar"
					},
					{
						"name": "approved_by_id",
						"type": "varchar"
					},
					{
						"name": "auditor_id",
						"type": "varchar"
					},
					{
						"name": "item_to_order",
						"type": "nvarchar"
					},
					{
						"name": "auditor_instructions",
						"type": "nvarchar"
					},
					{
						"name": "auditor_pay_per_audit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "approving_notes",
						"type": "nvarchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Audits"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ClientReports')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "varchar"
					},
					{
						"name": "ClientId",
						"type": "varchar"
					},
					{
						"name": "ReportTemplateId",
						"type": "varchar"
					},
					{
						"name": "ReportName",
						"type": "nvarchar"
					},
					{
						"name": "ReportId",
						"type": "varchar"
					},
					{
						"name": "WorkspaceId",
						"type": "varchar"
					},
					{
						"name": "Created_at",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "Updated_at",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DataSourceId",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ClientReports"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clients')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "legacy_id",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "logo",
						"type": "nvarchar"
					},
					{
						"name": "footer",
						"type": "nvarchar"
					},
					{
						"name": "client_type",
						"type": "nvarchar"
					},
					{
						"name": "sage_reference",
						"type": "nvarchar"
					},
					{
						"name": "manager_id",
						"type": "varchar"
					},
					{
						"name": "contract_expiry",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "store_locator",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "nvarchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "org_level1_name",
						"type": "nvarchar"
					},
					{
						"name": "org_level2_name",
						"type": "nvarchar"
					},
					{
						"name": "org_level3_name",
						"type": "nvarchar"
					},
					{
						"name": "org_level4_name",
						"type": "nvarchar"
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Clients"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimYesNo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "bitValue",
						"type": "bit"
					},
					{
						"name": "stringValue",
						"type": "nvarchar"
					},
					{
						"name": "valueType",
						"type": "nvarchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dim_YesNo"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ErrorOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_name": {
						"type": "string",
						"defaultValue": "t_error"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "schedule_type",
						"type": "nvarchar"
					},
					{
						"name": "item_to_order",
						"type": "nvarchar"
					},
					{
						"name": "order_info",
						"type": "nvarchar"
					},
					{
						"name": "visits_to_be_billed",
						"type": "int",
						"precision": 10
					},
					{
						"name": "start_date",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "end_date",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "auditor_pay_per_audit",
						"type": "nvarchar"
					},
					{
						"name": "client_charge_per_audit",
						"type": "nvarchar"
					},
					{
						"name": "auditor_instructions",
						"type": "nvarchar"
					},
					{
						"name": "email_subject",
						"type": "nvarchar"
					},
					{
						"name": "email_survey_result",
						"type": "nvarchar"
					},
					{
						"name": "exclude_from_client_reporting",
						"type": "bit"
					},
					{
						"name": "narv_visits_only",
						"type": "bit"
					},
					{
						"name": "status",
						"type": "nvarchar"
					},
					{
						"name": "currency",
						"type": "nvarchar"
					},
					{
						"name": "client_id",
						"type": "varchar"
					},
					{
						"name": "revision_id",
						"type": "varchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/QuestionTemplates')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "help",
						"type": "nvarchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "required",
						"type": "bit"
					},
					{
						"name": "type",
						"type": "nvarchar"
					},
					{
						"name": "config",
						"type": "nvarchar"
					},
					{
						"name": "category",
						"type": "nvarchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "QuestionTemplates"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Questions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "help",
						"type": "nvarchar"
					},
					{
						"name": "type",
						"type": "nvarchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "required",
						"type": "bit"
					},
					{
						"name": "category",
						"type": "nvarchar"
					},
					{
						"name": "config",
						"type": "nvarchar"
					},
					{
						"name": "question_template_id",
						"type": "varchar"
					},
					{
						"name": "revision_id",
						"type": "varchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Questions"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Revisions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "status",
						"type": "nvarchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "survey_id",
						"type": "varchar"
					},
					{
						"name": "blocked",
						"type": "bit"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Revisions"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sites')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "legacy_id",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "address_1",
						"type": "nvarchar"
					},
					{
						"name": "address_2",
						"type": "nvarchar"
					},
					{
						"name": "address_3",
						"type": "nvarchar"
					},
					{
						"name": "city",
						"type": "nvarchar"
					},
					{
						"name": "post_code",
						"type": "nvarchar"
					},
					{
						"name": "county",
						"type": "nvarchar"
					},
					{
						"name": "country",
						"type": "nvarchar"
					},
					{
						"name": "directions",
						"type": "nvarchar"
					},
					{
						"name": "approving_notes",
						"type": "nvarchar"
					},
					{
						"name": "code",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "nvarchar"
					},
					{
						"name": "client_id",
						"type": "varchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "org_level1",
						"type": "nvarchar"
					},
					{
						"name": "org_level2",
						"type": "nvarchar"
					},
					{
						"name": "org_level3",
						"type": "nvarchar"
					},
					{
						"name": "org_level4",
						"type": "nvarchar"
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Sites"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Surveys')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Surveys"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestImport')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Order",
						"type": "nvarchar"
					},
					{
						"name": "Client",
						"type": "nvarchar"
					},
					{
						"name": "Visit",
						"type": "nvarchar"
					},
					{
						"name": "Site",
						"type": "nvarchar"
					},
					{
						"name": "Premises Name",
						"type": "nvarchar"
					},
					{
						"name": "Address1",
						"type": "nvarchar"
					},
					{
						"name": "Address2",
						"type": "nvarchar"
					},
					{
						"name": "Address3",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "Post Code",
						"type": "nvarchar"
					},
					{
						"name": "Item to order",
						"type": "nvarchar"
					},
					{
						"name": "Actual Visit Date",
						"type": "nvarchar"
					},
					{
						"name": "Actual Visit Time",
						"type": "nvarchar"
					},
					{
						"name": "AM / PM",
						"type": "nvarchar"
					},
					{
						"name": "Pass-Fail",
						"type": "nvarchar"
					},
					{
						"name": "Pass-Fail2",
						"type": "nvarchar"
					},
					{
						"name": "Abort Reason",
						"type": "nvarchar"
					},
					{
						"name": "Extra Site 1",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "test_visits"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Users')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "first_name",
						"type": "nvarchar"
					},
					{
						"name": "middle_name",
						"type": "nvarchar"
					},
					{
						"name": "last_name",
						"type": "nvarchar"
					},
					{
						"name": "email",
						"type": "nvarchar"
					},
					{
						"name": "image",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "nvarchar"
					},
					{
						"name": "notify_user",
						"type": "bit"
					},
					{
						"name": "role",
						"type": "nvarchar"
					},
					{
						"name": "last_access",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "client_id",
						"type": "nvarchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Users"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VariableTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging_Answers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "row_id",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "type",
						"type": "nvarchar"
					},
					{
						"name": "value",
						"type": "nvarchar"
					},
					{
						"name": "hidden",
						"type": "bit"
					},
					{
						"name": "audit_id",
						"type": "varchar"
					},
					{
						"name": "question_template_id",
						"type": "varchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					},
					{
						"name": "insert_date",
						"type": "datetimeoffset",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "staging_Answers"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging_Auditors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "row_id",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "email_settings",
						"type": "bit"
					},
					{
						"name": "passport",
						"type": "nvarchar"
					},
					{
						"name": "identification",
						"type": "nvarchar"
					},
					{
						"name": "country",
						"type": "nvarchar"
					},
					{
						"name": "honorific",
						"type": "nvarchar"
					},
					{
						"name": "gender",
						"type": "nvarchar"
					},
					{
						"name": "date_of_birth",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "marital_status",
						"type": "nvarchar"
					},
					{
						"name": "occupation",
						"type": "nvarchar"
					},
					{
						"name": "ni_pps",
						"type": "nvarchar"
					},
					{
						"name": "home_address_1",
						"type": "nvarchar"
					},
					{
						"name": "home_address_2",
						"type": "nvarchar"
					},
					{
						"name": "home_city",
						"type": "nvarchar"
					},
					{
						"name": "home_post_code",
						"type": "nvarchar"
					},
					{
						"name": "home_county",
						"type": "nvarchar"
					},
					{
						"name": "term_address_1",
						"type": "nvarchar"
					},
					{
						"name": "term_address_2",
						"type": "nvarchar"
					},
					{
						"name": "term_city",
						"type": "nvarchar"
					},
					{
						"name": "term_post_code",
						"type": "nvarchar"
					},
					{
						"name": "term_county",
						"type": "nvarchar"
					},
					{
						"name": "mobile_number",
						"type": "nvarchar"
					},
					{
						"name": "home_number",
						"type": "nvarchar"
					},
					{
						"name": "notes",
						"type": "nvarchar"
					},
					{
						"name": "hear_about_us",
						"type": "nvarchar"
					},
					{
						"name": "hear_about_us_details",
						"type": "nvarchar"
					},
					{
						"name": "recommended_by",
						"type": "nvarchar"
					},
					{
						"name": "email_communication",
						"type": "bit"
					},
					{
						"name": "servelegal_community",
						"type": "bit"
					},
					{
						"name": "card_name",
						"type": "nvarchar"
					},
					{
						"name": "bank_country",
						"type": "nvarchar"
					},
					{
						"name": "account_number",
						"type": "nvarchar"
					},
					{
						"name": "sort_code",
						"type": "nvarchar"
					},
					{
						"name": "swift_code",
						"type": "nvarchar"
					},
					{
						"name": "iban_number",
						"type": "nvarchar"
					},
					{
						"name": "circumstances",
						"type": "nvarchar"
					},
					{
						"name": "student_loans",
						"type": "nvarchar"
					},
					{
						"name": "access_to_car",
						"type": "nvarchar"
					},
					{
						"name": "why_servelegal",
						"type": "nvarchar"
					},
					{
						"name": "about_yourself",
						"type": "nvarchar"
					},
					{
						"name": "travel_outside",
						"type": "nvarchar"
					},
					{
						"name": "auditor_status",
						"type": "nvarchar"
					},
					{
						"name": "user_id",
						"type": "varchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					},
					{
						"name": "insert_date",
						"type": "datetimeoffset",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "staging_Auditors"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging_Audits')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "row_id",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "query_notes",
						"type": "nvarchar"
					},
					{
						"name": "query_category",
						"type": "nvarchar"
					},
					{
						"name": "survey_result",
						"type": "nvarchar"
					},
					{
						"name": "visit_info",
						"type": "nvarchar"
					},
					{
						"name": "submitted_date",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "approval_date",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "deadline_date",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "date_of_visit",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "purchase_cost",
						"type": "float",
						"precision": 15
					},
					{
						"name": "allowance",
						"type": "float",
						"precision": 15
					},
					{
						"name": "mileage",
						"type": "float",
						"precision": 15
					},
					{
						"name": "entrance_charge",
						"type": "float",
						"precision": 15
					},
					{
						"name": "travel_expenses",
						"type": "float",
						"precision": 15
					},
					{
						"name": "travel_expenses_type",
						"type": "nvarchar"
					},
					{
						"name": "travel_expenses_description",
						"type": "nvarchar"
					},
					{
						"name": "reclaimable_expenses",
						"type": "float",
						"precision": 15
					},
					{
						"name": "reclaimable_expenses_type",
						"type": "nvarchar"
					},
					{
						"name": "reclaimable_expenses_description",
						"type": "nvarchar"
					},
					{
						"name": "paid",
						"type": "bit"
					},
					{
						"name": "batched",
						"type": "bit"
					},
					{
						"name": "payroll_date",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "pay_date",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "email_note",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "nvarchar"
					},
					{
						"name": "order_id",
						"type": "varchar"
					},
					{
						"name": "site_id",
						"type": "varchar"
					},
					{
						"name": "approved_by_id",
						"type": "varchar"
					},
					{
						"name": "auditor_id",
						"type": "varchar"
					},
					{
						"name": "item_to_order",
						"type": "nvarchar"
					},
					{
						"name": "auditor_instructions",
						"type": "nvarchar"
					},
					{
						"name": "auditor_pay_per_audit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "approving_notes",
						"type": "nvarchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					},
					{
						"name": "insert_date",
						"type": "datetimeoffset",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "staging_Audits"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging_Clients')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "row_id",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "legacy_id",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "logo",
						"type": "nvarchar"
					},
					{
						"name": "footer",
						"type": "nvarchar"
					},
					{
						"name": "client_type",
						"type": "nvarchar"
					},
					{
						"name": "sage_reference",
						"type": "nvarchar"
					},
					{
						"name": "manager_id",
						"type": "varchar"
					},
					{
						"name": "contract_expiry",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "store_locator",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "nvarchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "org_level1_name",
						"type": "nvarchar"
					},
					{
						"name": "org_level2_name",
						"type": "nvarchar"
					},
					{
						"name": "org_level3_name",
						"type": "nvarchar"
					},
					{
						"name": "org_level4_name",
						"type": "nvarchar"
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					},
					{
						"name": "insert_date",
						"type": "datetimeoffset",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "staging_Clients"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging_Orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "row_id",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "schedule_type",
						"type": "nvarchar"
					},
					{
						"name": "item_to_order",
						"type": "nvarchar"
					},
					{
						"name": "order_info",
						"type": "nvarchar"
					},
					{
						"name": "visits_to_be_billed",
						"type": "int",
						"precision": 10
					},
					{
						"name": "start_date",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "end_date",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "auditor_pay_per_audit",
						"type": "nvarchar"
					},
					{
						"name": "client_charge_per_audit",
						"type": "nvarchar"
					},
					{
						"name": "auditor_instructions",
						"type": "nvarchar"
					},
					{
						"name": "email_subject",
						"type": "nvarchar"
					},
					{
						"name": "email_survey_result",
						"type": "nvarchar"
					},
					{
						"name": "exclude_from_client_reporting",
						"type": "bit"
					},
					{
						"name": "narv_visits_only",
						"type": "bit"
					},
					{
						"name": "status",
						"type": "nvarchar"
					},
					{
						"name": "currency",
						"type": "nvarchar"
					},
					{
						"name": "client_id",
						"type": "varchar"
					},
					{
						"name": "revision_id",
						"type": "varchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					},
					{
						"name": "insert_date",
						"type": "datetimeoffset",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "staging_Orders"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging_QuestionTemplates')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "row_id",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "help",
						"type": "nvarchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "required",
						"type": "bit"
					},
					{
						"name": "type",
						"type": "nvarchar"
					},
					{
						"name": "config",
						"type": "nvarchar"
					},
					{
						"name": "category",
						"type": "nvarchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					},
					{
						"name": "insert_date",
						"type": "datetimeoffset",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "staging_QuestionTemplates"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging_Questions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "row_id",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "help",
						"type": "nvarchar"
					},
					{
						"name": "type",
						"type": "nvarchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "required",
						"type": "bit"
					},
					{
						"name": "category",
						"type": "nvarchar"
					},
					{
						"name": "config",
						"type": "nvarchar"
					},
					{
						"name": "question_template_id",
						"type": "varchar"
					},
					{
						"name": "revision_id",
						"type": "varchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					},
					{
						"name": "insert_date",
						"type": "datetimeoffset",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "staging_Questions"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging_Revisions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "row_id",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "status",
						"type": "nvarchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "survey_id",
						"type": "varchar"
					},
					{
						"name": "blocked",
						"type": "bit"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					},
					{
						"name": "insert_date",
						"type": "datetimeoffset",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "staging_Revisions"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging_Sites')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "row_id",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "legacy_id",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "address_1",
						"type": "nvarchar"
					},
					{
						"name": "address_2",
						"type": "nvarchar"
					},
					{
						"name": "address_3",
						"type": "nvarchar"
					},
					{
						"name": "city",
						"type": "nvarchar"
					},
					{
						"name": "post_code",
						"type": "nvarchar"
					},
					{
						"name": "county",
						"type": "nvarchar"
					},
					{
						"name": "country",
						"type": "nvarchar"
					},
					{
						"name": "directions",
						"type": "nvarchar"
					},
					{
						"name": "approving_notes",
						"type": "nvarchar"
					},
					{
						"name": "code",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "nvarchar"
					},
					{
						"name": "client_id",
						"type": "varchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "org_level1",
						"type": "nvarchar"
					},
					{
						"name": "org_level2",
						"type": "nvarchar"
					},
					{
						"name": "org_level3",
						"type": "nvarchar"
					},
					{
						"name": "org_level4",
						"type": "nvarchar"
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					},
					{
						"name": "insert_date",
						"type": "datetimeoffset",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "staging_Sites"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging_Surveys')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "row_id",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					},
					{
						"name": "insert_date",
						"type": "datetimeoffset",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "staging_Surveys"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging_Users')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDataWarehousePRODAuth",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "row_id",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "internal_id",
						"type": "varchar"
					},
					{
						"name": "first_name",
						"type": "nvarchar"
					},
					{
						"name": "middle_name",
						"type": "nvarchar"
					},
					{
						"name": "last_name",
						"type": "nvarchar"
					},
					{
						"name": "email",
						"type": "nvarchar"
					},
					{
						"name": "image",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "nvarchar"
					},
					{
						"name": "notify_user",
						"type": "bit"
					},
					{
						"name": "role",
						"type": "nvarchar"
					},
					{
						"name": "last_access",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "client_id",
						"type": "nvarchar"
					},
					{
						"name": "created_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "modified_at",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "entity_source",
						"type": "nvarchar"
					},
					{
						"name": "insert_date",
						"type": "datetimeoffset",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "staging_Users"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/serve_legal_reports_key_vault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "https://serve-legal-reports.vault.azure.net/"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CalculateAverages')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Audits",
								"type": "DatasetReference"
							},
							"name": "Audits"
						},
						{
							"dataset": {
								"referenceName": "Clients",
								"type": "DatasetReference"
							},
							"name": "Clients"
						},
						{
							"dataset": {
								"referenceName": "Sites",
								"type": "DatasetReference"
							},
							"name": "Sites"
						},
						{
							"dataset": {
								"referenceName": "DimYesNo",
								"type": "DatasetReference"
							},
							"name": "DimYesNo"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "VariableTable",
								"type": "DatasetReference"
							},
							"name": "TDailyByClientType"
						},
						{
							"dataset": {
								"referenceName": "VariableTable",
								"type": "DatasetReference"
							},
							"name": "TClientTypes"
						},
						{
							"dataset": {
								"referenceName": "VariableTable",
								"type": "DatasetReference"
							},
							"name": "TProducts"
						},
						{
							"dataset": {
								"referenceName": "VariableTable",
								"type": "DatasetReference"
							},
							"name": "TDailyByProdyct"
						},
						{
							"dataset": {
								"referenceName": "VariableTable",
								"type": "DatasetReference"
							},
							"name": "TAverageByProduct"
						},
						{
							"dataset": {
								"referenceName": "VariableTable",
								"type": "DatasetReference"
							},
							"name": "TDailyByClientTypeProduct"
						},
						{
							"dataset": {
								"referenceName": "VariableTable",
								"type": "DatasetReference"
							},
							"name": "TMonthlyByClientTypeProduct"
						},
						{
							"dataset": {
								"referenceName": "VariableTable",
								"type": "DatasetReference"
							},
							"name": "TWeeklyByClientTypeProduct"
						},
						{
							"dataset": {
								"referenceName": "VariableTable",
								"type": "DatasetReference"
							},
							"name": "TWeeklyByClient"
						}
					],
					"transformations": [
						{
							"name": "SiteClientId"
						},
						{
							"name": "ClientType"
						},
						{
							"name": "JoinSite"
						},
						{
							"name": "JoinClient"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "SurveyResult"
						},
						{
							"name": "PickImportantColumns"
						},
						{
							"name": "TrueFalseResultCount"
						},
						{
							"name": "OnlyActiveStatus"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "Aggregate3"
						},
						{
							"name": "Aggregate4"
						},
						{
							"name": "CalculateFields"
						},
						{
							"name": "DayByClientTypeProduct"
						},
						{
							"name": "AverageByProduct"
						},
						{
							"name": "Aggregate6"
						},
						{
							"name": "Aggregate7"
						},
						{
							"name": "Aggregate8"
						}
					],
					"script": "source(output(\n\t\tid as string,\n\t\tinternal_id as string,\n\t\tquery_notes as string,\n\t\tquery_category as string,\n\t\tsurvey_result as string,\n\t\tvisit_info as string,\n\t\tsubmitted_date as string,\n\t\tapproval_date as string,\n\t\tdeadline_date as string,\n\t\tdate_of_visit as string,\n\t\tpurchase_cost as double,\n\t\tallowance as double,\n\t\tmileage as double,\n\t\tentrance_charge as double,\n\t\ttravel_expenses as double,\n\t\ttravel_expenses_type as string,\n\t\ttravel_expenses_description as string,\n\t\treclaimable_expenses as double,\n\t\treclaimable_expenses_type as string,\n\t\treclaimable_expenses_description as string,\n\t\tpaid as boolean,\n\t\tbatched as boolean,\n\t\tpayroll_date as string,\n\t\tpay_date as string,\n\t\temail_note as string,\n\t\tstatus as string,\n\t\torder_id as string,\n\t\tsite_id as string,\n\t\tapproved_by_id as string,\n\t\tauditor_id as string,\n\t\titem_to_order as string,\n\t\tauditor_instructions as string,\n\t\tauditor_pay_per_audit as double,\n\t\tapproving_notes as string,\n\t\tcreated_at as string,\n\t\tmodified_at as string,\n\t\tentity_source as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Audits\nsource(output(\n\t\tid as string,\n\t\tinternal_id as string,\n\t\tlegacy_id as string,\n\t\tname as string,\n\t\tlogo as string,\n\t\tfooter as string,\n\t\tclient_type as string,\n\t\tsage_reference as string,\n\t\tmanager_id as string,\n\t\tcontract_expiry as string,\n\t\tstore_locator as string,\n\t\tstatus as string,\n\t\tcreated_at as string,\n\t\tmodified_at as string,\n\t\torg_level1_name as string,\n\t\torg_level2_name as string,\n\t\torg_level3_name as string,\n\t\torg_level4_name as string,\n\t\tentity_source as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Clients\nsource(output(\n\t\tid as string,\n\t\tinternal_id as string,\n\t\tlegacy_id as string,\n\t\tname as string,\n\t\taddress_1 as string,\n\t\taddress_2 as string,\n\t\taddress_3 as string,\n\t\tcity as string,\n\t\tpost_code as string,\n\t\tcounty as string,\n\t\tcountry as string,\n\t\tdirections as string,\n\t\tapproving_notes as string,\n\t\tcode as string,\n\t\tstatus as string,\n\t\tclient_id as string,\n\t\tcreated_at as string,\n\t\tmodified_at as string,\n\t\torg_level1 as string,\n\t\torg_level2 as string,\n\t\torg_level3 as string,\n\t\torg_level4 as string,\n\t\tentity_source as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Sites\nsource(output(\n\t\tid as integer,\n\t\tbitValue as boolean,\n\t\tstringValue as string,\n\t\tvalueType as string,\n\t\tcreated_at as string,\n\t\tmodified_at as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimYesNo\nSites select(mapColumn(\n\t\tsite_id = id,\n\t\tsite_client_id = client_id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SiteClientId\nClients select(mapColumn(\n\t\tid,\n\t\tclient_type\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ClientType\nSurveyResult, SiteClientId join(PickImportantColumns@site_id == SiteClientId@site_id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinSite\nJoinSite, ClientType join(site_client_id == ClientType@id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinClient\nJoinClient aggregate(groupBy(date_of_visit,\n\t\tclient_type),\n\ttrue_result_count = sum(true_result_count),\n\t\tfalse_result_count = sum(false_result_count),\n\t\ttotal_count = count(),\n\t\ttrue_percentage = sum(true_result_count) / count(),\n\t\tfalse_percentage = sum(false_result_count) / count()) ~> Aggregate1\nCalculateFields, TrueFalseResultCount join(lower(survey_result) == lower(stringValue),\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> SurveyResult\nOnlyActiveStatus select(mapColumn(\n\t\tid,\n\t\tquery_category,\n\t\tsurvey_result,\n\t\tdate_of_visit,\n\t\tstatus,\n\t\tsite_id,\n\t\titem_to_order\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PickImportantColumns\nDimYesNo derive(bitValue = bitValue,\n\t\tstringValue = stringValue,\n\t\ttrue_result_count = iif(bitValue, 1, 0),\n\t\tfalse_result_count = iif(bitValue, 0, 1)) ~> TrueFalseResultCount\nAudits filter(status == 'approved') ~> OnlyActiveStatus\nJoinClient aggregate(groupBy(client_type),\n\tcount = count(),\n\t\ttrue_percent = sum(true_result_count) / count()) ~> Aggregate2\nSurveyResult aggregate(groupBy(item_to_order),\n\tcount = count(),\n\t\ttrue_percent = sum(true_result_count) / count()) ~> Aggregate3\nSurveyResult aggregate(groupBy(item_to_order,\n\t\tdate_of_visit),\n\tcount = count(),\n\t\ttrue_percent = sum(true_result_count) / count(),\n\t\tfalse_percent = sum(false_result_count) / count()) ~> Aggregate4\nPickImportantColumns derive(date_of_visit = toDate(regexExtract(date_of_visit,'....-..-..',0),'yyyy-MM-dd'),\n\t\tmonth_of_visit = toDate(regexExtract(date_of_visit,'....-..',0),'yyyy-MM'),\n\t\tweek_of_visit = concat(toString(year(toDate(date_of_visit))), lpad(toString(weekOfYear(toDate(date_of_visit))), 2, '0')),\n\t\tyear = year(toDate(date_of_visit)),\n\t\tmonth = month(toDate(date_of_visit)),\n\t\tweek = weekOfYear(toDate(date_of_visit)),\n\t\titem_to_order = lower(coalesce(item_to_order, 'not specified'))) ~> CalculateFields\nJoinClient aggregate(groupBy(client_type,\n\t\titem_to_order,\n\t\tdate_of_visit),\n\tcount = count(),\n\t\ttrue_percent = sum(true_result_count) / count(),\n\t\tfalse_percent = sum(false_result_count) / count()) ~> DayByClientTypeProduct\nSurveyResult aggregate(groupBy(item_to_order),\n\tcount = count()) ~> AverageByProduct\nJoinClient aggregate(groupBy(month_of_visit,\n\t\titem_to_order,\n\t\tclient_type),\n\tcount = count(),\n\t\ttrue_percent = sum(true_result_count) / count(),\n\t\tfalse_percent = sum(false_result_count) / count()) ~> Aggregate6\nJoinClient aggregate(groupBy(client_type,\n\t\tweek_of_visit,\n\t\titem_to_order),\n\tcount = count(),\n\t\ttrue_percent = sum(true_result_count) / count()) ~> Aggregate7\nJoinClient aggregate(groupBy(client_type,\n\t\tweek_of_visit),\n\tcount = count(),\n\t\ttrue_percent = sum(true_result_count) / count()) ~> Aggregate8\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TDailyByClientType\nAggregate2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tclient_type,\n\t\tcount,\n\t\ttrue_percent\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TClientTypes\nAggregate3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\titem_to_order,\n\t\tcount,\n\t\ttrue_percent\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TProducts\nAggregate4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\titem_to_order,\n\t\tdate_of_visit,\n\t\tcount,\n\t\ttrue_percent,\n\t\tfalse_percent\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TDailyByProdyct\nAverageByProduct sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TAverageByProduct\nDayByClientTypeProduct sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tclient_type,\n\t\titem_to_order,\n\t\tdate_of_visit,\n\t\tcount,\n\t\ttrue_percent,\n\t\tfalse_percent\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TDailyByClientTypeProduct\nAggregate6 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TMonthlyByClientTypeProduct\nAggregate7 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tclient_type,\n\t\titem_to_order,\n\t\tweek_of_visit,\n\t\tcount,\n\t\ttrue_percent\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TWeeklyByClientTypeProduct\nAggregate8 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tclient_type,\n\t\tweek_of_visit,\n\t\tcount,\n\t\ttrue_percent\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TWeeklyByClient"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Audits')]",
				"[concat(variables('factoryId'), '/datasets/Clients')]",
				"[concat(variables('factoryId'), '/datasets/Sites')]",
				"[concat(variables('factoryId'), '/datasets/DimYesNo')]",
				"[concat(variables('factoryId'), '/datasets/VariableTable')]"
			]
		}
	]
}